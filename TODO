Rename: retrieveAssetSizes -> getPreviousAssetSizes

Use async/await in test.

Check for the existence of the running asset value in file database. If it exists, we don't need to make separate request for the previous asset stats artifact.

Write test for cli.js.

Move effects into one file. They are too small to be in their own file.

Try out babel pipeline operator! https://github.com/babel/babel/tree/master/packages/babel-plugin-proposal-pipeline-operator

Replace Promises with Flutures.

Clean up async code with await/async or generators.

Use named parameters for error message sprintf.

Stats should passed around as a list, not an object. Currently, we have to do a
bunch of conversions back and forth.

Move ReaderPromise into seperate repo.

Give ReaderPromise an unwrap method, and use that instead of hijacking the
underlying Reader's run method.

Add terminology:
Asset: object representation of the asset
Asset-file: the physical file on the file-system

Upgrade to babel7. In the meantime, I have some workarounds (hacks) to get the pipeline operator to work.
1. rm -rf node_modules/babel-eslint/node_modules/babylon/
2. rm -rf node_modules/ava/node_modules/babylon
3. Add "pipelineOperator" to list of ecmascript features in node_modules/babel-eslint/index.js